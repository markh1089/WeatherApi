{"version":3,"sources":["components/WeatherCard.js","components/InputForm.js","components/WeekContainer.js","App.js","index.js"],"names":["moment","require","WeatherCard","time","dateFormat","Date","weekday","dt","setTime","day","format","temp","Math","round","main","weatherDescription","weather","description","icon","iconLink","console","log","className","classname","src","alt","InputForm","location","london","updateLocation","leeds","manchester","sheffield","onClick","API_KEY","process","WeekContainer","state","completeDataSet","dailyDataSet","componentDidMount","weatherURL","fetch","then","response","json","data","dayData","list","filter","dt_txt","includes","setState","catch","mapWeatherCards","map","index","updateLondon","newLocation","newFetch","updateSheffield","updateLeeds","updateManchester","this","Component","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.f2c8471e.chunk.js","sourcesContent":["import React from \"react\";\r\nimport './WeatherCard.css'\r\n\r\nconst moment = require(\"moment\");\r\n\r\nconst WeatherCard = ({ time }) => {\r\n  let dateFormat = new Date();\r\n  const weekday = time.dt * 1000;\r\n  dateFormat.setTime(weekday);\r\n\r\n  //weather details\r\n  let day = moment(dateFormat).format(\"dddd\")\r\n  // let date = moment().format('MMMM Do YYYY') \r\n  let temp = Math.round(time.main.temp)\r\n  let weatherDescription = time.weather[0].description\r\n  let icon = time.weather[0].icon\r\n  let iconLink = `http://openweathermap.org/img/wn/${icon}.png`\r\n  console.log(weatherDescription)\r\n  \r\n\r\n  return (\r\n    <div className=\"col-sm-2\">\r\n      <div className=\"card \">\r\n        <h3 className=\"card-title\">{day}</h3>\r\n        <img classname='card-img-top' src={iconLink} alt='weatherIcon'></img>\r\n        <h2>{temp} Â°C</h2>\r\n        <p className='weatherDescription'>{weatherDescription}</p>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default WeatherCard;\r\n","import React from 'react'\r\n\r\nconst InputForm = ({location, updateLocation,london,leeds,manchester, sheffield}) => {\r\n    return (\r\n        <div>\r\n            <h1>{location}, UK</h1>\r\n            {/* <form>\r\n                <input type='text' name='city' placeholder='type a city here' onChange={event => updateLocation(event.target.value)}></input>\r\n            </form> */}\r\n            <button onClick={london}>London</button>\r\n            <button onClick={leeds}>Leeds</button>\r\n            <button onClick={sheffield}>Sheffield</button>\r\n            <button onClick={manchester}>Manchester</button>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\n\r\nexport default InputForm\r\n\r\n","import React, { Component } from \"react\";\r\nimport WeatherCard from \"./WeatherCard\";\r\nimport InputForm from './InputForm';\r\n\r\nconst API_KEY = process.env.REACT_APP_API_KEY;\r\n// let location = 'Leeds'\r\n\r\nclass WeekContainer extends Component {\r\n  state = {\r\n    completeDataSet: [],\r\n    dailyDataSet: [],\r\n    location: \"Leeds\",\r\n  };\r\n\r\n  \r\n  componentDidMount = () => {\r\n    \r\n    \r\n    const weatherURL = `https://api.openweathermap.org/data/2.5/forecast?q=${this.state.location}&units=metric&appid=${API_KEY}`;\r\n    \r\n    fetch(weatherURL)\r\n    .then((response) => response.json())\r\n    .then((data) => {\r\n      const dayData = data.list.filter((time) =>\r\n      time.dt_txt.includes(\"18:00:00\")\r\n      );\r\n      this.setState({\r\n        completeDataSet: data.list,\r\n        dailyDataSet: dayData,\r\n      });\r\n      console.log(this.state);\r\n    })\r\n    .catch(console.log);\r\n  };\r\n  \r\n\r\n  \r\n  mapWeatherCards = () => {\r\n    return this.state.dailyDataSet.map((time, index) => (\r\n      <WeatherCard time={time} key={index} />\r\n      ));\r\n    };\r\n\r\n    // *Need to work on this to get it based off input fields*updateLocation = newLocation => {\r\n \r\n    //   this.setState({location:newLocation}, this.newFetch)\r\n    //   console.log(this.state.location)      \r\n    // }\r\n\r\n    updateLondon = newLocation => {\r\n \r\n      this.setState({location:'London'}, this.newFetch)\r\n    }\r\n    updateSheffield = newLocation => {\r\n \r\n      this.setState({location:'Sheffield'}, this.newFetch)\r\n    }\r\n    updateLeeds = newLocation => {\r\n \r\n      this.setState({location:'Leeds'}, this.newFetch)\r\n    }\r\n    updateManchester = newLocation => {\r\n \r\n      this.setState({location:'Manchester'}, this.newFetch)\r\n    }\r\n    \r\n    newFetch = () => {\r\n      const weatherURL = `https://api.openweathermap.org/data/2.5/forecast?q=${this.state.location}&units=metric&appid=${API_KEY}`;\r\n    \r\n      fetch(weatherURL)\r\n      .then((response) => response.json())\r\n      .then((data) => {\r\n        const dayData = data.list.filter((time) =>\r\n        time.dt_txt.includes(\"18:00:00\")\r\n        );\r\n        \r\n        this.setState({\r\n          completeDataSet: data.list,\r\n          dailyDataSet: dayData,\r\n        });\r\n        console.log(this.state);\r\n      })\r\n      .catch(console.log);\r\n\r\n    }\r\n    \r\n\r\n  render() {\r\n    return (\r\n      <div className=\"container\">\r\n        <h1 className=\"weatherTitle\"> 5 day Weather forecast</h1>\r\n        <InputForm location = {this.state.location} updateLocation={this.updateLocation} london = {this.updateLondon} leeds={this.updateLeeds} manchester={this.updateManchester} sheffield={this.updateSheffield} />\r\n        <div className=\"row justify-content-center cards\">\r\n          {this.mapWeatherCards()}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default WeekContainer;\r\n","import './App.css';\nimport WeekContainer from './components/WeekContainer'\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\n\n\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <WeekContainer />\n\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}